"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const auth_controller_1 = require("../controllers/auth.controller");
const jwt_1 = require("../utils/jwt");
const googleAuth_controller_1 = require("../controllers/googleAuth.controller");
const router = express_1.default.Router();
router.post("/signUp", auth_controller_1.userSignup);
router.post("/verifyOtp", auth_controller_1.verifySignupOtp);
router.post("/login", auth_controller_1.login);
router.post("/logout", auth_controller_1.logout);
router.get("/loggedInUserData", jwt_1.verifyAccessToken, auth_controller_1.getLoggedInUserData);
router.post("/requestPasswordResetOtp", auth_controller_1.requestPasswordResetOtp);
router.post("/resendPasswordResetOtp", auth_controller_1.resendPasswordResetOtp);
router.post("/verifyPasswordResetOtp", auth_controller_1.verifyPasswordResetOtp);
router.post("/resetPassword", auth_controller_1.resetPassword);
router.get("/google", googleAuth_controller_1.loginWithGoogle);
router.get("/google/callback", googleAuth_controller_1.googleCallback);
router.post('/toggle-2fa', auth_controller_1.toggleTwoFactorAuth);
router.post('/verify-2fa', auth_controller_1.verifyTwoFactorLogin);
router.post('/changePassword', jwt_1.verifyAccessToken, auth_controller_1.changePassword);
router.delete("/deleteAccount", jwt_1.verifyAccessToken, auth_controller_1.deleteAccount);
exports.default = router;
